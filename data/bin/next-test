#!/usr/bin/env ruby

# Special-purpose beaker suite automation tool.  I mean, really special purpose.
# I run my pe_acceptance_tests `setup/scale` runs under `screen` (you could also
# get the same effect by redirecting STDOUT + STDERR, maybe using `tee`, etc.).
# This is useful as a log of all output for debugging, but it also includes the 
# /etc/hosts compatible hostname -> IP address mappings.  And that's really cool
# because I can later run single tests, without re-provisioning, if I have those
# same host IPs listed in my /etc/hosts.
#
# Well, if I use this on our coordinator host then things get hairier, because
# /etc/hosts is shared amongst all users.  Well, turns out the config file for
# these test runs allows specifying an `ip` parameter for each host.
#
# So.... this script takes the path to a screen log file of a full run, and the
# path to the config file used to perform that run. It extracts the host->IP
# mapping, writes a new config file with IPs configured, and then provides the
# command one would use to run new tests on those hosts, without re-provisioning.

require "yaml"

logfile = ARGV.shift
configfile = ARGV.shift
raise "Usage: #{$0} <output-logfile> <configfile>" unless logfile and configfile

puts
host_to_ip_map = {}
seen = false

# find hostname -> IP address mappings from logged output
File.readlines(logfile).each do |line|
  line.chomp!

  if line =~ %r{instance IP.*/etc/hosts}
    seen = true
    next    
  end

  next unless seen
  next if line =~ %r{^(?:\s|-)*$}

  if line =~ %r{^(\d+\.\d+\.\d+\.\d+)\s+([-a-zA-Z0-9]+)$}
    puts line
    host_to_ip_map[$2] = $1
    next
  end
    
  break
end

# read config file
data = YAML.load(File.read(configfile))

# add IP entries to each host
data["HOSTS"].keys.each do |host|
  data["HOSTS"][host]["ip"] = host_to_ip_map[host]
end

# write out a new config file with IP addresses embedded
configout = "#{configfile}-with-IPs-#{Time.now.strftime("%Y%m%dT%H%M")}"
File.open(configout, "w") do |file|
  file.puts YAML.dump(data)
end

puts
puts "New configuration data written to #{configout}"
puts "time bundle exec beaker --color --debug --type pe --preserve-hosts always --no-provision --config #{configout}  --tests setup/scale/install/"
